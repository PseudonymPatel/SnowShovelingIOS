This is a file of everything that needs to be done.
LOOK AT THE TRELLO NOT THIS!!!
/-------------------------------------------------------------------------------------------------------------------\
|•••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••|
\-------------------------------------------------------------------------------------------------------------------/
VERY IMPORTANT NOTES: look at before prod.

Job class cannot handle a nil user. This means that if there are no ratings, no rating class,
    the whole app WILL CRASH! This needs to be fixed asap before prod!!

There is no nil handling/error handling in the code. This better be able to
    work with all the edge cases. This means putting in default values.

IN THE MIDDLE OF CREATING JOB THING!!

/------------------------------------------------------------------------------------------------------------------\
|••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••••|
\------------------------------------------------------------------------------------------------------------------/


Frontend:

1. Map -- backend and frontend
2. Ratings -- need a non-editable rating class, backend --> Decided to make non-interactable rating

3. user Database!!
    -- use PostgreSQL later, once my own backend is needed.
    Use Firebase for now and hopefully for a long time.

5. add user's contact info to the expanded job view

6. Fix the problem with resizing the Job Table Cells

7 Need to improve job class,

 (working on) Need to create class to communicate with the database -> Firebase API

9. The filter screen needs to have real functionality, also, add more filters?
    Should the filters be shown on the main screen?

10. Make the RatingBit Sequence and IteratorProtocol Protocols compliant so I can use them/loop through them.

11. Need to create swipes so the user can use swiping to go back and forth

12. Persistent storage for the acceptedJobs,

13. Accepted Jobs table

---------------------------------

Backend:
1. Add contact info things to the `users` database table
